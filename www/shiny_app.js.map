{"version":3,"file":"shiny_app.js","mappings":"oBAgC4B,WAE1BA,OAASA,MAAMC,wBAAwB,wBAAwB,SAACC,GAC9D,IAAMC,EAAQC,SAASC,cAAc,mCACrCF,EAAMG,UAAUC,SAAS,WAdJ,SAACJ,GAA+B,IAAxBK,IAAwB,yDACjDC,EAASL,SAASC,cAAc,kCACtCF,GAASA,EAAMG,UAAUI,OAAO,UAChCP,GAASK,GAAgBC,EAAOH,UAAUI,OAAO,MAClD,CAWQC,CAAiBR,IA3BH,SAACA,GAA+B,IAAxBK,IAAwB,yDAC/CC,EAASL,SAASC,cAAc,kCACtCF,GAASA,EAAMG,UAAUM,IAAI,UAC7BT,GAASK,GAAgBC,EAAOH,UAAUM,IAAI,MAC/C,CAuBmCC,CAAeV,EAChD,GACF,EC9BCW,GAEAC,OAAOC,OAAS,WCNhBC,UAAUC,UAAUC,SAAS,gBAC3BJ,OAAOK,MAAM,mDDOd,C","sources":["webpack://geom90007-a2/./src/js/events.js","webpack://geom90007-a2/./src/js/_build.js","webpack://geom90007-a2/./src/js/user_agent.js"],"sourcesContent":["/**\n  Handling of reactive event messages from Shiny\n */\n\n/**\n  Opens a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return void\n */\nconst activate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.add(\"active\");\n  panel && apply_dimmer && dimmer.classList.add(\"dim\");\n}\n\n/**\n  Closes a tabPanel while adding effects\n  @param {DOMElement} panel a DOM element representing a Shiny tabPanel\n  @param {boolean} [dimmer=true] whether to toggle dimmer panel\n  @return void\n */\nconst deactivate_panel = (panel, apply_dimmer = true) => {\n  const dimmer = document.querySelector(\"[data-value='Dimmer'].tab-pane\");\n  panel && panel.classList.remove(\"active\");\n  panel && apply_dimmer && dimmer.classList.remove(\"dim\");\n}\n\n/**\n  Loads and binds event handlers for Shiny custom messages\n  @return void\n */\nconst load_event_handlers = () => {\n  // Open the About panel\n  Shiny && Shiny.addCustomMessageHandler(\"filters_panel_toggle\", (message) => {\n    const panel = document.querySelector(\"[data-value='Filters'].tab-pane\");\n    panel.classList.contains(\"active\")\n      && deactivate_panel(panel) || activate_panel(panel)\n  })\n}\n\nexport {\n  load_event_handlers\n};\n","/**\n  Scripts used in the Shiny app\n */\n\nimport { check_user_agent } from \"./user_agent.js\"\nimport { load_event_handlers } from \"./events.js\"\n\n(() => {\n  \n  load_event_handlers();\n  \n  window.onload = () => {\n    check_user_agent();\n  }\n  \n})()","/**\n  Checks the user agent and loads a helpful message\n */\nconst check_user_agent = () => {\n  // pop up message for WebQTEngine browsers (built in)\n  navigator.userAgent.includes(\"QtWebEngine\") &&\n    window.alert(\"For best effect, please use an external browser.\");\n};\n\nexport {\n  check_user_agent\n};"],"names":["Shiny","addCustomMessageHandler","message","panel","document","querySelector","classList","contains","apply_dimmer","dimmer","remove","deactivate_panel","add","activate_panel","load_event_handlers","window","onload","navigator","userAgent","includes","alert"],"sourceRoot":""}